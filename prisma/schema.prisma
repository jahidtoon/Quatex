// Prisma schema mapping আপনার sql.note এর টেবিল অনুযায়ী
// Database: SQLite (Development)

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

 generator client {
  provider = "prisma-client-js"
 }

// --- Trading Pairs (MVP Option 1) ---
enum PairStatus {
    ACTIVE
    PAUSED
    DISABLED
}

model currency_pairs {
    id           String     @id @default(uuid())
    base         String
    quote        String
    symbol       String     @unique   // e.g. EUR_USD canonical
    display      String?              // UI label e.g. EUR/USD
  provider     String?              // e.g. BINANCE | COINGECKO | SIMULATED | ALPHAVANTAGE
  provider_symbol String?           // symbol used at provider (e.g. BTCUSDT)
  price_decimals Int?               // dynamic precision for display/rounding
    status       PairStatus @default(ACTIVE)
    payout       Int?                 // percentage integer (e.g. 80 = 80%)
    latest_price Decimal?
    last_updated DateTime?
    isDeleted    Boolean     @default(false)
    created_at   DateTime    @default(now())
    updated_at   DateTime    @updatedAt

    @@index([status])
    @@index([isDeleted])
    @@index([symbol])
}

// --- Stored Candles (1m base + higher intervals) ---
model forex_candles {
  id        String   @id @default(uuid())
  symbol    String               // internal symbol e.g. EUR_USD
  interval  String               // '1m','5m','15m','1h','4h','1d'
  time      DateTime             // candle open time
  open      Decimal
  high      Decimal
  low       Decimal
  close     Decimal  
  created_at DateTime @default(now()) 
  updated_at DateTime @updatedAt 

  @@unique([symbol, interval, time])
  @@index([symbol, interval, time])
}

 model users {
    id         String   @id @default(uuid()) 
  name       String?  
  first_name String?  
  last_name  String?  
  email      String   @unique 
  password_hash String? 
  phone      String?  
  country    String?  
  date_of_birth String? 
  address    String?  
  city       String?  
  postal_code String? 
  balance    Decimal? @default(0) 
    is_verified Boolean  @default(false)
    is_admin   Boolean   @default(false)
  avatar_url String?  
  created_at DateTime @default(now()) 
  updated_at DateTime @updatedAt 
  deposits        deposits[]
  withdrawals     withdrawals[]
  trades          trades[]
  leaderboard     leaderboard[]
  support_messages support_messages[]
  chat_messages    chat_messages[]
  settings        settings[]
 }

 model deposits {
    id         String   @id @default(uuid()) 
  user_id    String?  
  amount     Decimal? 
  method     String?  
  status     String?  
  created_at DateTime @default(now()) 
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model withdrawals {
    id          String   @id @default(uuid()) 
  user_id     String?  
  amount      Decimal? 
  method      String?  
  account_info Json?
  status      String?  
  created_at  DateTime @default(now()) 
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model trades {
    id         String   @id @default(uuid()) 
  user_id    String?  
  symbol     String?  
  amount     Decimal? 
  direction  String?  
  open_time  DateTime? 
  close_time DateTime? 
  result     String?  
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model leaderboard {
    id         String   @id @default(uuid()) 
  user_id    String?  
  amount     Decimal? 
  rank       Int?
  updated_at DateTime @default(now()) 
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model tournaments {
    id           String   @id @default(uuid()) 
  title        String?  
  prize_pool   Decimal? 
  entry_fee    Decimal? 
  participants Int?
  duration     String?  
  status       String?  
  created_at   DateTime @default(now()) 
 }

 model support_messages {
    id         String   @id @default(uuid()) 
  user_id    String?  
  name       String?  
  email      String?  
  subject    String?  
  message    String?  
  created_at DateTime @default(now()) 
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model chat_messages {
    id         String   @id @default(uuid()) 
  user_id    String?  
  sender     String?  
  message    String?  
  time       DateTime @default(now()) 
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

 model settings {
    id            String   @id @default(uuid()) 
  user_id       String?  
  notifications Boolean? @default(false)
  private       Boolean? @default(false)
  users users? @relation(fields: [user_id], references: [id])
  @@index([user_id])
 }

